(define (func n)
	(cond ((< n 3) n)
	      (else (+ (func (- n 1)) (* 2 (func (- n 2))) (* 3 (func (- n 3)))))
	)		
)

(define (func-iter n)
	(define (func-raw a b c counter) 
		(cond ((= counter n) c)
		      (else (func-raw (+ a (* 2 b) (* 3 c)) a b (+ counter 1)))
		)
	)
	(func-raw 2 1 0 0)
)