(define (square x) (* x x))

(define (even? x)
	(= (remainder x 2) 0)
)

(define (expo b n)
	(define (exp-iter b a n)
		(cond ((= n 0) a)
		      ((even? n) (exp-iter (square b) a (/ n 2)))
		      (else (exp-iter b (* a b) (- n 1)))
		)
	)
	(exp-iter b 1 n)
)