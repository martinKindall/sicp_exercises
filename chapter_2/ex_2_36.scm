(define (accumulate op initial sequence)
  	(cond ((null? sequence) initial)
  	      (else (op (car sequence) (accumulate op initial (cdr sequence))))
  	)
)

(define (accumulate-n op init seqs)
  	(if (null? (car seqs))
  	    '()
  	    (cons (accumulate op init (map (lambda (sequence) (car sequence)) seqs)) 
  	    	(accumulate-n op init (map (lambda (sequence) (cdr sequence)) seqs))
  	    )
  	)
)