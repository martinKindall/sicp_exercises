(define table (list)) 

(define (put op type proc) 
    (set! table (append table (list (list op type proc)))) 
)

(define (get op type) 
    (define (search op type t) 
        (cond ((null? t) #f) 
            ((and (eqv? (caar t) op) (eqv? (cadar t) type)) 
                (caddar t) 
            ) 
            (else (search op type (cdr t)))
        ) 
    ) 
    (search op type table) 
)

(define (attach-tag type-tag contents) 
    (cons type-tag contents) 
) 

(define (type-tag datum) 
    (if (pair? datum) 
        (car datum) 
        (error "Bad tagged datum -- TYPE-TAG" datum) 
    ) 
)

(define (content datum) 
    (if (pair? datum) 
        (cdr datum) 
        (error "Bad tagged datum -- CONTENTS" datum) 
    )
) 